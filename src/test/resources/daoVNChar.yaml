packageName: com.example.emsql
className: DaoNVarchar
declare:
  idNVarchar: long
  varchar01: NVarchar?
  varchar02: NVarchar?
  varchar03: NVarchar?
  varchar04: NVarchar?
  varchar11: NVarchar
  varchar12: NVarchar
  varchar13: NVarchar
  varchar14: NVarchar
methods:
  - methodName: insert01
    perform: !Insert
      execSql: |
        insert into tvarchar (
          varchar01,
          varchar11
        ) values (
          :varchar01,
          :varchar11 
        )
  - methodName: insert02
    perform: !Insert
      execSql: |
        insert into tvarchar (
          varchar01,
          varchar02,
          varchar11,
          varchar12
        ) values (
          :varchar01,
          :varchar02,
          :varchar11,
          :varchar12 
        )
  - methodName: insert02R
    perform: !Insert
      input:
        reflect: yes
      execSql: |
        insert into tvarchar (
          varchar01,
          varchar02,
          varchar11,
          varchar12
        ) values (
          :varchar01,
          :varchar02,
          :varchar11,
          :varchar12 
        )
  - methodName: insert02K
    perform: !InlineProcedure
      execSql: |
        begin
        insert into tvarchar (
          varchar01,
          varchar02,
          varchar11,
          varchar12
        ) values (
          :varchar01,
          :varchar02,
          :varchar11,
          :varchar12 
        ) 
        returning varchar13 into :varchar13;
        end;

  - methodName: insert12K
    perform: !InlineProcedure
      execSql: |
        begin
        insert into tvarchar (
          varchar01,
          varchar02,
          varchar11,
          varchar12
        ) values (
          :varchar01,
          :varchar02,
          :varchar11,
          :varchar12 
        ) 
        returning varchar03 into :varchar03;
        end;

  - methodName: insert02K2
    perform: !InlineProcedure
      execSql: |
        begin
        insert into tvarchar (
          varchar01,
          varchar02,
          varchar11,
          varchar12
        ) values (
          :varchar01,
          :varchar02,
          :varchar11,
          :varchar12 
        ) 
        returning varchar13, varchar14 
        into :varchar13, :varchar14;
        end;

  - methodName: insert12K2
    perform: !InlineProcedure
      execSql: |
        begin
        insert into tvarchar (
          varchar01,
          varchar02,
          varchar11,
          varchar12
        ) values (
          :varchar01,
          :varchar02,
          :varchar11,
          :varchar12 
        ) 
        returning varchar03, varchar04 
        into :varchar03, :varchar04;
        end;

  - methodName: findNVarcharAny
    perform: !SelectOptional
      execSql: |
        select
          varchar01,
          varchar11
        into
          :varchar01,
          :varchar11 
        from tvarchar
        where id_NVarchar = :idNVarchar

  - methodName: findNVarcharAnyD
    perform: !SelectOptional
      output:
        delegate: yes
      execSql: |
        select
          varchar01,
          varchar11
        into
          :varchar01,
          :varchar11 
        from tvarchar
        where id_NVarchar = :idNVarchar

  - methodName: findNVarcharAny01
    perform: !SelectOptional
      execSql: |
        select
          varchar01
        into
          :varchar01
        from tvarchar
        where varchar02 = :varchar02

  - methodName: findNVarcharAny11
    perform: !SelectOptional
      execSql: |
        select
          varchar11
        into
          :varchar11
        from tvarchar
        where varchar12 = :varchar12

  - methodName: findNVarcharAnyR
    perform: !SelectOptional
      output:
        reflect: yes
      execSql: |
        select
          varchar01,
          varchar11
        into
          :varchar01,
          :varchar11 
        from tvarchar
        where id_NVarchar = :idNVarchar

  - methodName: call01
    perform: !CallProcedure
      output:
        fields:
          - varchar02
          - varchar12
      execSql: |
        call solve(:varchar01, :varchar11, :varchar02, :varchar12)

  - methodName: call02
    perform: !CallProcedure
      input:
        reflect: yes
      output:
        reflect: yes
        fields:
          - varchar02
          - varchar12
      execSql: |
        call solve(:varchar01, :varchar11, 
                   :varchar03, :varchar13,
                   :varchar04, :varchar14,
                   :varchar02, :varchar12)
