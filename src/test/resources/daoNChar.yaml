packageName: com.example.emsql
className: DaoNChar
declare:
  idNChar: long
  char01: NChar?
  char02: NChar?
  char03: NChar?
  char04: NChar?
  char11: NChar
  char12: NChar
  char13: NChar
  char14: NChar
methods:
  - methodName: insert01
    perform: !Insert
      execSql: |
        insert into tchar (
          char01,
          char11
        ) values (
          :char01,
          :char11 
        )
  - methodName: insert02
    perform: !Insert
      execSql: |
        insert into tchar (
          char01,
          char02,
          char11,
          char12
        ) values (
          :char01,
          :char02,
          :char11,
          :char12 
        )
  - methodName: insert02R
    perform: !Insert
      input:
        reflect: yes
      execSql: |
        insert into tchar (
          char01,
          char02,
          char11,
          char12
        ) values (
          :char01,
          :char02,
          :char11,
          :char12 
        )
  - methodName: insert02K
    perform: !InlineProcedure
      execSql: |
        begin
        insert into tchar (
          char01,
          char02,
          char11,
          char12
        ) values (
          :char01,
          :char02,
          :char11,
          :char12 
        ) 
        returning char13 into :char13;
        end;

  - methodName: insert12K
    perform: !InlineProcedure
      execSql: |
        begin
        insert into tchar (
          char01,
          char02,
          char11,
          char12
        ) values (
          :char01,
          :char02,
          :char11,
          :char12 
        ) 
        returning char03 into :char03;
        end;

  - methodName: insert02K2
    perform: !InlineProcedure
      execSql: |
        begin
        insert into tchar (
          char01,
          char02,
          char11,
          char12
        ) values (
          :char01,
          :char02,
          :char11,
          :char12 
        ) 
        returning char13, char14 
        into :char13, :char14;
        end;

  - methodName: insert12K2
    perform: !InlineProcedure
      execSql: |
        begin
        insert into tchar (
          char01,
          char02,
          char11,
          char12
        ) values (
          :char01,
          :char02,
          :char11,
          :char12 
        ) 
        returning char03, char04 
        into :char03, :char04;
        end;

  - methodName: findNCharAny
    perform: !SelectOptional
      execSql: |
        select
          char01,
          char11
        into
          :char01,
          :char11 
        from tchar
        where id_NChar = :idNChar

  - methodName: findNCharAnyD
    perform: !SelectOptional
      output:
        delegate: yes
      execSql: |
        select
          char01,
          char11
        into
          :char01,
          :char11 
        from tchar
        where id_NChar = :idNChar

  - methodName: findNCharAny01
    perform: !SelectOptional
      execSql: |
        select
          char01
        into
          :char01
        from tchar
        where char02 = :char02

  - methodName: findNCharAny11
    perform: !SelectOptional
      execSql: |
        select
          char11
        into
          :char11
        from tchar
        where char12 = :char12

  - methodName: findNCharAnyR
    perform: !SelectOptional
      output:
        reflect: yes
      execSql: |
        select
          char01,
          char11
        into
          :char01,
          :char11 
        from tchar
        where id_NChar = :idNChar

  - methodName: call01
    perform: !CallProcedure
      output:
        fields:
          - char02
          - char12
      execSql: |
        call solve(:char01, :char11, :char02, :char12)

  - methodName: call02
    perform: !CallProcedure
      input:
        reflect: yes
      output:
        reflect: yes
        fields:
          - char02
          - char12
      execSql: |
        call solve(:char01, :char11, 
                   :char03, :char13,
                   :char04, :char14,
                   :char02, :char12)
